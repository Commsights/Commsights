@{ ViewData["Title"] = "Competitor detail"; }

@model Commsights.Data.Models.Membership


<div class="row">
    <div class="col-md-12">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Customer - Competitor detail</h3>
            </div>
            <div class="card-body">
                <form asp-action="SaveCompetitor" asp-controller="Membership">
                    @Html.HiddenFor(Model => Model.ID)
                    <div class="row">
                        <div class='col-md-10'>
                        </div>
                        <div class='col-md-1'>
                            <button style="width:100%;" type="submit" title="Save" class="btn btn-primary">
                                <span class="fas fa-save"></span>
                            </button>
                        </div>
                        <div class='col-md-1'>
                            <a asp-action="CompetitorCancel" asp-controller="Membership" title="Competitor category" style="width:100%;" class="btn btn-info">
                                <span class="fas fa-arrow-left"></span>
                            </a>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class='form-group'>
                                <label for='Account'>Competitor</label>
                                @(Html.TextBoxFor(Model => Model.Account, new { placeholder = "Competitor", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='FullName'>Full name</label>
                                @(Html.TextBoxFor(Model => Model.FullName, new { placeholder = "Full name", @class = "form-control" }))
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class='form-group'>
                                <label for='CpnyID'>Category</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.ParentID)
                                      .DataValueField("ID")
                                      .DataTextField("CodeName")
                                      .HtmlAttributes(new { style = "width:100%;" })
                                      .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetMembershipTypeToList", "Config")))
                                    )
                            </div>
                        </div>
                    </div>
                </form>
                <br />
                @(Html.Kendo().Grid<Commsights.Data.DataTransferObject.MembershipPermissionDataTransfer>()
.Name("MembershipPermissionDataTransfer")
.Columns(columns =>
{
    columns.Command(command => { command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fas fa-edit").HtmlAttributes(new { style = "font-size: 16px; padding-left:16px; padding-top:6px; border-radius: 6px; font-weight:bold; width:50px;" }); command.Destroy().Text("&nbsp;").IconClass("fas fa-trash-alt").HtmlAttributes(new { style = "font-size: 16px; color:#ffffff; background-color:#d73925; padding-left:16px; padding-top:6px; border-radius: 6px; width:50px;" }); }).Width(150);
    columns.Bound(t => t.Brand.TextName).EditorTemplateName("Config_Brand").Title("Brand").Width(300);
})
.ToolBar(toolBar => toolBar.Create().Text("&nbsp;").IconClass("fas fa-plus").HtmlAttributes(new { style = "font-size: 16px; border-radius: 6px; font-weight:bold; background-color:#009966; color:#ffffff; padding-left:16px;" }))
.ToolBar(toolBar => toolBar.Search())
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { @class = "KendoGrid" })
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(1000)
.Model(model =>
{
    model.Id(t => t.ID);
    model.Field(t => t.Brand).DefaultValue(new Commsights.Data.DataTransferObject.ModelTemplate());
})
.Events(t => { t.RequestEnd("onGridRequestEnd"); })
.Read(t => t.Action("GetDataTransferBrandByMembershipIDAndCodeToList", "MembershipPermission").Data("filterMembershipPermission"))
.Destroy(t => t.Action("Delete", "MembershipPermission"))
.Create(t => t.Action("CreateDataTransferBrand", "MembershipPermission").Data("filterMembershipPermissionCreateBrand"))
.Update(t => t.Action("UpdateDataTransfer", "MembershipPermission"))
)
)
            </div>
        </div>
    </div>
</div>

@(Html.Kendo().Notification()
    .Name("Notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Width(400)
)

<script>
    function onGridRequestEnd(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#MembershipPermissionDataTransfer").data("kendoGrid").dataSource.read();
        }
    }
    function filterMembershipPermission(e) {
        var membershipIDValue = $("#ID").val();
        return { membershipID: membershipIDValue };
    }
    function filterMembershipPermissionCreateBrand(e) {
        var membershipIDValue = $("#ID").val();
        return { membershipID: membershipIDValue };
    }
</script>
