@{ ViewData["Title"] = "Customer"; }
<div class='col-xs-12'>
    <div class='box'>
        <div class='box-header'>
            <ul>
                <li>
                    <i class="fa fa-users"></i>
                    <a href="#">Customer</a>
                </li>
                <li class="active">
                    <a href="#"> Customer</a>
                </li>
            </ul>
        </div>
        <div class='box-body'>
            <div class="row">
                <div class='col-sm-12'>
                    <div class='col-sm-1'>
                        <a href="/Membership/CustomerDetail/0" class="btn btn-success"><i class="fa fa-plus"></i></a>
                    </div>
                </div>
            </div>
            <br />
            @(Html.Kendo().Grid<Commsights.Data.Models.Membership>()
.Name("Membership")
.Columns(columns =>
{
    columns.Command(command => { command.Destroy().Text("&nbsp;").IconClass("fa fa-trash-o").HtmlAttributes(new { style = "font-size: 16px; color:#ffffff; background-color:#d73925; padding-left:10px; padding-top:6px; border-radius: 6px; width:50px;" }); }).Width(60);
    columns.Template(@"<a href='/Membership/CustomerDetail/#=Id#' class='btn btn-success' style='color:white;'><i class='fa fa-external-link'></i></a>").Width(60).HtmlAttributes(new { style = "text-align:center;" });
    columns.Bound(t => t.FullName).Title("Full name").Width(300);
    columns.Bound(t => t.Email).Title("Email").Width(200);
    columns.Bound(t => t.Phone).Title("Phone").Width(200);
    columns.Bound(t => t.Id).Title("ID").Width(50);
})
.ToolBar(toolBar => toolBar.Search())
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { style = "font-size: 16px;" })
.Search(search => { search.Field(f => f.FullName); search.Field(f => f.Email); search.Field(f => f.Phone); })
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(1000)
.Model(model =>
{
    model.Id(t => t.Id);
    model.Field(t => t.Id).Editable(false);
})
.Events(t => { t.RequestEnd("onGridRequestEnd"); })
.Read(t => t.Action("GetCustomerToList", "Membership"))
.Destroy(t => t.Action("Delete", "Membership"))
)
)
        </div>
    </div>
</div>

@(Html.Kendo().Notification()
    .Name("Notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Width(400)
)

<script>
    function onGridRequestEnd(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#Membership").data("kendoGrid").dataSource.read();
        }
    }</script>