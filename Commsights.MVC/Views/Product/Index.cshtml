@{ ViewData["Title"] = "Article original"; }

@model Commsights.MVC.Models.ProductViewModel
<div class='col-xs-12'>
    <div class='box'>
        <div class='box-header'>
            <ul>
                <li>
                    <i class="fa fa-database"></i>
                    <a href="#">Data</a>
                </li>
                <li class="active">
                    <a href="#"> Article original</a>
                </li>
            </ul>
        </div>
        <div class='box-body'>
            <div class="row">
                <div class='col-sm-12'>
                    <div class='col-sm-3'>
                        @(Html.Kendo().DropDownList()
                     .Name("Website")
                     .DataValueField("Id")
                     .DataTextField("Title")
                     .HtmlAttributes(new { style = "width:100%; font-size: 16px;" })
                      .Events(e => e.DataBound("onWebsiteDataBound"))
                       .Filter(FilterType.Contains)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetWebisteAndActiveToList", "Config")))
                            )
                    </div>
                    <div class='col-sm-2'>
                        @(Html.Kendo().DatePickerFor(Model => Model.DatePublish)
                                     .Format("dd/MM/yyyy")
                                     .HtmlAttributes(new { style = "width: 100%; font-size: 16px; text-align: right;", title = "Date publish" })
                                     .DateInput()
                                )
                    </div>
                    <div class='col-sm-1'>
                        <button type="button" class="btn btn-success btn-sm" onclick="Search()">
                            <span class="fa fa-search"></span>
                        </button>
                    </div>
                    <div class='col-sm-2'>
                        <button type="button" class="btn btn-primary btn-sm" onclick="ScanFull()">
                            <span class="fa fa-refresh"></span> Scan full
                        </button>
                    </div>
                </div>
            </div>
            <br />
            @(Html.Kendo().Grid<Commsights.Data.Models.Product>()
.Name("Product")
.Columns(columns =>
{
    columns.Command(command => { command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fa fa-pencil-square-o").HtmlAttributes(new { style = "font-size: 16px; padding-left:14px; padding-top:6px; border-radius: 6px; font-weight:bold;" }); }).Width(120);
    columns.Bound(t => t.DatePublish).Title("Publish").Width(200);
    columns.Bound(t => t.Title).Title("Title").Width(1000);
    columns.Bound(t => t.Description).Title("Description").Width(2000);
    columns.Bound(t => t.Urlcode).Title("URL").Width(1000);
    columns.Command(command => { command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fa fa-pencil-square-o").HtmlAttributes(new { style = "font-size: 16px; padding-left:14px; padding-top:6px; border-radius: 6px; font-weight:bold;" }); }).Width(120);
})
.ToolBar(toolBar => toolBar.Search())
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { style = "font-size: 16px;" })
.Search(search => { search.Field(f => f.Title); search.Field(f => f.Urlcode); search.Field(f => f.Description); })
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(1000)
.Model(model =>
{
    model.Id(t => t.Id);
    model.Field(t => t.DatePublish).Editable(false);
    model.Field(t => t.Title).Editable(false);
    model.Field(t => t.Urlcode).Editable(false);
})
.Events(t => { t.RequestEnd("onGridRequestEnd"); })
.Read(t => t.Action("GetByParentIDAndDatePublishToList", "Product").Data("filterProduct"))
.Update(t => t.Action("Update", "Product"))
)
)
        </div>
    </div>
</div>
@(Html.Kendo().Notification()
    .Name("Notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Width(400)
)
<script>
    function onGridRequestEnd(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#Product").data("kendoGrid").dataSource.read();
        }
    }
    function filterProduct(e) {
        var parentIDValue = $("#Website").data("kendoDropDownList").value();
        var datePublishValue = toDate02($("#DatePublish").val());
        return { parentID: parentIDValue, datePublish: datePublishValue };

    }
    function onWebsiteDataBound() {
        var control = $("#Website").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            control.select(0);
            control.trigger("change");
        }
    }
    function Search() {
        $("#Product").data("kendoGrid").dataSource.read();
    }
    function ScanFull() {
        BeginRequestHandler();
         $.ajax({
            url: '@Url.Action("ScanFull", "Product")',
            type: 'GET',
            cache: false
         }).done(function (e) {
             EndRequestHandler();
             var response = e;
             var messageType = response.split('-')[0];
             var note = response.split('-')[1];
             var notification = $("#Notification").data("kendoNotification");
             notification.show(note, messageType);
         });
        return false;
    }
</script>