@{ Layout = "~/Views/Shared/_LayoutNoHeader.cshtml"; ViewData["Title"] = Model.Title + " - Detail"; }

@model Commsights.Data.DataTransferObject.CodeData


<div class="row" style="margin-top:-7px;">
    <div class="col-md-12">
        <div class="card card-primary" style="margin-bottom: -5px;">
            <div class="card-body" style="padding-top:2px;">
                <form asp-action="SaveCoding" asp-controller="CodeData">
                    @Html.HiddenFor(Model => Model.Advalue)
                    @Html.HiddenFor(Model => Model.IndustryID)
                    @Html.HiddenFor(Model => Model.RowIndex)
                    @Html.HiddenFor(Model => Model.ProductID)
                    @Html.HiddenFor(Model => Model.ProductPropertyID)
                    <div class="row">
                        <div class='col-md-1'>
                        </div>
                        <div class='col-md-1'>
                            <a id="RowFirst" onclick="onRowMove('/CodeData/Detail?RowIndex=0')" style="color:#ffffff;" title="First" class="btn btn-info">
                                <span class="fas fa-angle-double-left"></span> (1)
                            </a>
                        </div>
                        <div class='col-md-1'>
                            <a id="RowBack" onclick="onRowMove('/CodeData/Detail?RowIndex=@Model.RowBack')" style="color:#ffffff;" title="Back" class="btn btn-info">
                                <span class="fas fa-angle-left"></span> (2)
                            </a>
                        </div>
                        <div class='col-md-2 text-center'>
                            <span style="font-weight:bold; font-size:18px;">@Model.RowCurrent / @Model.RowCount</span>
                        </div>
                        <div class='col-md-1'>
                            <a id="RowNext" onclick="onRowMove('/CodeData/Detail?RowIndex=@Model.RowCurrent')" style="color:#ffffff;" title="First" class="btn btn-info">
                                <span class="fas fa-angle-right"></span> (3)
                            </a>
                        </div>
                        <div class='col-md-1'>
                            <a id="RowLast" onclick="onRowMove('/CodeData/Detail?RowIndex=@Model.RowLast')" style="color:#ffffff;" title="Last" class="btn btn-info">
                                <span class="fas fa-angle-double-right"></span> (4)
                            </a>
                        </div>
                        <div class='col-md-1'>
                            <a id="URLCode" onclick="onOpenBlank('@Model.URLCode')" title='@Model.Title' class='btn btn-success' style='color:white; cursor: pointer;'><i class='fas fa-external-link-alt'></i> (5)</a>
                        </div>
                        <div class='col-md-2'>
                            @(Html.CheckBoxFor(Model => Model.IsSummary.Value))
                            <p style="display:inline-block; font-size:14px; font-weight:bold; margin:0; padding-left:10px;">Brief (6)</p>
                        </div>
                        <div class='col-md-1'>
                            <a id="Copy" onclick="onCopy()" title='Copy' class='btn btn-primary' style='color:white; cursor: pointer;'>Copy (7)</a>
                        </div>
                        <div class='col-md-1'>
                            <button style="width:100%;" type="submit" title="Save" class="btn btn-primary" autofocus="autofocus">
                                <span class="fas fa-save"></span> (8)
                            </button>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2">
                            <div class='form-group'>
                                <label for='CategoryMain'>Category Main</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.CategoryMain)
                     .DataValueField("CodeName")
                     .DataTextField("CodeName")
                    .HtmlAttributes(new { @class = "form-control" })
                    .Events(e => e.Change("onCategoryMainChange"))
                       .Filter(FilterType.StartsWith)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCodeDataCategoryMainActiveToList", "Config")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='CategorySub'>Category Sub</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.CategorySub)
                     .DataValueField("CodeName")
                     .DataTextField("CodeName")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCategorySubByCategoryMainToList", "CodeData").Data("filterCategorySub")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='CompanyName'>Company</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.CompanyName)
                     .DataValueField("Account")
                     .DataTextField("Account")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                       .Events(e => e.DataBound("onCompanyNameDataBound").Change("onCompanyNameChange"))
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetByIndustryID001ByActiveToList", "Membership")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='CorpCopy'>Corp Copy</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.CorpCopy)
                     .DataValueField("CodeName")
                     .DataTextField("CodeName")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCorpCopyToList", "Config")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='SOECompany'>SOE Corp (%)</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.SOECompany)
                     .DataValueField("Display")
                     .DataTextField("Display")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                       .Events(e => e.DataBound("onSOECompanyDataBound").Change("onSOECompanyChange"))
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetSEOToList", "AppGlobal")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='ProductName_ProjectName'>Product</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.ProductName_ProjectName)
                     .DataValueField("ProductName")
                     .DataTextField("ProductName")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetProductByAccountAndCodeToList", "MembershipPermission").Data("filterMembershipPermission")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='SOEProduct'>SOE Product (%)</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.SOEProduct)
                     .DataValueField("Display")
                     .DataTextField("Display")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                       .Events(e => e.DataBound("onSOEProductDataBound").Change("onSOEProductChange"))
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetSEOToList", "AppGlobal")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='SentimentCorp'>Sentiment</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.SentimentCorp)
                     .DataValueField("CodeName")
                     .DataTextField("CodeName")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                        .Events(e => e.DataBound("onSentimentCorpDataBound").Change("onSentimentCorpChange"))
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetSentimentToList", "Config")))
                            )
                            </div>

                        </div>

                        <div class="col-md-2">
                            <div class='form-group'>
                                <label for='TierCommsights'>Tier Commsights</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.TierCommsights)
                     .DataValueField("CodeName")
                     .DataTextField("CodeName")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetMediaTierToList", "Config")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='Title'>Headline (Vie)</label>
                                @(Html.TextBoxFor(Model => Model.Title, new { @class = "form-control", @title = Model.Title }))
                            </div>
                            <div class='form-group'>
                                <label for='TitleEnglish'>Headline (Eng)</label>
                                @(Html.TextBoxFor(Model => Model.TitleEnglish, new { @class = "form-control", @title = Model.TitleEnglish }))
                            </div>
                            <div class='form-group'>
                                <label for='Description'>Summary (Vie)</label>
                                @(Html.TextBoxFor(Model => Model.Description, new { @class = "form-control", @title = Model.Description }))
                            </div>
                            <div class='form-group'>
                                <label for='DescriptionEnglish'>Summary (Eng)</label>
                                @(Html.TextBoxFor(Model => Model.DescriptionEnglish, new { @class = "form-control", @title = Model.DescriptionEnglish }))
                            </div>
                            <div class='form-group'>
                                <label for='Author'>Journalist</label>
                                @(Html.TextBoxFor(Model => Model.Author, new { @class = "form-control", @title = Model.Author }))
                            </div>

                            <div class='form-group'>
                                <label for='CampaignName'>Campaign name</label>
                                @(Html.TextBoxFor(Model => Model.CampaignName, new { @class = "form-control", @title = Model.CampaignName }))
                            </div>
                            <div class='form-group'>
                                <label for='KeyMessage'>Key message</label>
                                @(Html.TextBoxFor(Model => Model.KeyMessage, new { @class = "form-control" }))
                            </div>

                        </div>
                        <div class="col-md-2">
                            <div class='form-group'>
                                <label for='CompetitiveWhat'>Competitive</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.CompetitiveWhat)
                     .DataValueField("Account")
                     .DataTextField("Account")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetByIndustryID001ToList", "Membership")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='CompetitiveNewsValue'>Competitive News</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.CompetitiveNewsValue)
                     .DataValueField("ID")
                     .DataTextField("Display")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCodeDataValueToList", "AppGlobal")))
                            )
                            </div>

                            <div class='form-group'>
                                <label for='TasteValue'>Taste value</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.TasteValue)
                     .DataValueField("ID")
                     .DataTextField("Display")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                                .Events(e => e.DataBound("onTasteValueDataBound").Change("onHeadlineValueChange"))
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCodeDataValueToList", "AppGlobal")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='PriceValue'>Price value</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.PriceValue)
                     .DataValueField("ID")
                     .DataTextField("Display")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                                .Events(e => e.DataBound("onTasteValueDataBound").Change("onHeadlineValueChange"))
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCodeDataValueToList", "AppGlobal")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='NutritionFactValue'>Nutrition fact value</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.NutritionFactValue)
                     .DataValueField("ID")
                     .DataTextField("Display")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                                .Events(e => e.DataBound("onNutritionFactValueDataBound").Change("onHeadlineValueChange"))
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCodeDataValueToList", "AppGlobal")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='VitaminValue'>Vitamin value</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.VitaminValue)
                     .DataValueField("ID")
                     .DataTextField("Display")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                                .Events(e => e.DataBound("onVitaminValueDataBound").Change("onHeadlineValueChange"))
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCodeDataValueToList", "AppGlobal")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='GoodForHealthValue'>Good for health value</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.GoodForHealthValue)
                     .DataValueField("ID")
                     .DataTextField("Display")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                                .Events(e => e.DataBound("onGoodForHealthValueDataBound").Change("onHeadlineValueChange"))
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCodeDataValueToList", "AppGlobal")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='Bottle_CanDesignValue'>Bottle / Can Design</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.Bottle_CanDesignValue)
                     .DataValueField("ID")
                     .DataTextField("Display")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                                .Events(e => e.DataBound("onBottle_CanDesignValueDataBound").Change("onHeadlineValueChange"))
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCodeDataValueToList", "AppGlobal")))
                            )
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class='form-group'>
                                <label for='TierValue'>Tier Value</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.TierValue)
                     .DataValueField("ID")
                     .DataTextField("Display")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                                .Events(e => e.DataBound("onTierValueDataBound").Change("onHeadlineValueChange"))
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCodeDataValueToList", "AppGlobal")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='HeadlineValue' title="Brand mention in Headline">Headline value</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.HeadlineValue)
                     .DataValueField("ID")
                     .DataTextField("Display")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                                .Events(e => e.DataBound("onHeadlineValueDataBound").Change("onHeadlineValueChange"))
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCodeDataValueToList", "AppGlobal")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='PictureValue' title="Image (related to brand/company)">Picture value</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.PictureValue)
                     .DataValueField("ID")
                     .DataTextField("Display")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                                .Events(e => e.DataBound("onPictureValueDataBound").Change("onHeadlineValueChange"))
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCodeDataValueToList", "AppGlobal")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='KOLValue'>KOL value</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.KOLValue)
                     .DataValueField("ID")
                     .DataTextField("Display")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                                .Events(e => e.DataBound("onKOLValueDataBound").Change("onHeadlineValueChange"))
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCodeDataValueToList", "AppGlobal")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='OtherValue'>Other value</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.OtherValue)
                     .DataValueField("ID")
                     .DataTextField("Display")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                                .Events(e => e.DataBound("onOtherValueDataBound").Change("onHeadlineValueChange"))
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCodeDataValueToList", "AppGlobal")))
                            )
                            </div>

                            <div class='form-group'>
                                <label for='SpokePersonName'>Spoke person name</label>
                                @(Html.TextBoxFor(Model => Model.SpokePersonName, new { @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='SpokePersonTitle'>Spoke person title</label>
                                @(Html.TextBoxFor(Model => Model.SpokePersonTitle, new { @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='Segment'>Segment</label>
                                @(Html.TextBoxFor(Model => Model.Segment, new { placeholder = "Auto by product", @class = "form-control", @readonly = "readonly" }))
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class='form-group'>
                                <label for='FeatureValue'>News title</label>
                                @(Html.TextBoxFor(Model => Model.FeatureValue, new { placeholder = "Auto by Feature Corp", @class = "form-control text-right", @readonly = "readonly" }))
                            </div>
                            <div class='form-group'>
                                <label for='SpokePersonValue'>Spoke person value</label>
                                @(Html.TextBoxFor(Model => Model.SpokePersonValue, new { placeholder = "Auto by Spoke person name", @class = "form-control text-right", @readonly = "readonly" }))
                            </div>
                            <div class='form-group'>
                                <label for='ToneValue' title="Sentiment(MPS & ROME)">Sentiment value</label>
                                @(Html.TextBoxFor(Model => Model.ToneValue, new { placeholder = "Auto by sentiment", @class = "form-control text-right", @readonly = "readonly" }))
                            </div>
                            <div class='form-group'>
                                <label for='Source'>Source</label>
                                @(Html.TextBoxFor(Model => Model.Source, new { @class = "form-control text-right",  @readonly = "readonly" }))
                            </div>
                            <div class='form-group'>
                                <label for='FileName'>File name</label>
                                @(Html.TextBoxFor(Model => Model.FileName, new { @class = "form-control",  @readonly = "readonly", @title = Model.FileName }))
                            </div>
                            <div class='form-group'>
                                <label for='Advalue'>Advalue</label>
                                @(Html.TextBoxFor(Model => Model.AdvalueString, new { @class = "form-control text-right", @readonly = "readonly" }))
                            </div>
                            <div class='form-group'>
                                <label for='DatePublish'>Date Publish</label>
                                @(Html.TextBoxFor(Model => Model.DatePublish, "{0:MM/dd/yyyy}", new { @class = "form-control text-right", @readonly = "readonly" }))
                            </div>
                            <div class='form-group'>
                                <label for='DateUpload'>Date Upload</label>
                                @(Html.TextBoxFor(Model => Model.DateUpload, "{0:MM/dd/yyyy HH:mm}", new { @class = "form-control text-right", @readonly = "readonly" }))
                            </div>
                        </div>
                        <div class="col-md-2">

                            <div class='form-group'>
                                <label for='MPS'>MPS</label>
                                @(Html.TextBoxFor(Model => Model.MPS, new { placeholder = "Auto", @class = "form-control text-right", @readonly = "readonly" }))
                            </div>
                            <div class='form-group'>
                                <label for='ROME_Corp_VND'>Media Value Corp</label>
                                @(Html.TextBoxFor(Model => Model.ROME_Corp_VND, new { placeholder = "Auto", @class = "form-control text-right", @readonly = "readonly" }))
                            </div>
                            <div class='form-group'>
                                <label for='ROME_Product_VND'>Media Value Product</label>
                                @(Html.TextBoxFor(Model => Model.ROME_Product_VND, new { placeholder = "Auto", @class = "form-control text-right", @readonly = "readonly" }))
                            </div>

                            <div class='form-group'>
                                <label for='FeatureCorp'>Feature Corp</label>
                                @(Html.TextBoxFor(Model => Model.FeatureCorp, new { placeholder = "Auto by SOE Corp", @class = "form-control", @readonly = "readonly" }))
                            </div>
                            <div class='form-group'>
                                <label for='FeatureProduct'>Feature Product</label>
                                @(Html.TextBoxFor(Model => Model.FeatureProduct, new { placeholder = "Auto by SOE Product", @class = "form-control", @readonly = "readonly" }))
                            </div>
                            <div class='form-group'>
                                <label for='MediaTitle'>Media Title</label>
                                @(Html.TextBoxFor(Model => Model.MediaTitle, new { @class = "form-control", @readonly = "readonly" }))
                            </div>
                            <div class='form-group'>
                                <label for='MediaType'>Media Type</label>
                                @(Html.TextBoxFor(Model => Model.MediaType, new { @class = "form-control", @readonly = "readonly" }))
                            </div>
                            <div class='form-group'>
                                <label for='ProductSource'>Source Upload</label>
                                @(Html.TextBoxFor(Model => Model.ProductSource, new { @class = "form-control", @readonly = "readonly" }))
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script>
    function onCopy() {
        alert("SOHU");
    }
    function filterCategorySub(e) {
        var categoryMainValue = $("#CategoryMain").data("kendoDropDownList").value();
        return { categoryMain: categoryMainValue };
    }
    function onCategoryMainChange() {
        $("#CategorySub").data("kendoDropDownList").dataSource.read();
    }
    function filterMembershipPermission(e) {
        var accountValue = $("#CompanyName").data("kendoDropDownList").value();
        return { account: accountValue };
    }
    function onHeadlineValueDataBound() {
        var control = $("#HeadlineValue").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            control.select(0);
            control.trigger("change");
        }
    }
    function onTierValueDataBound() {
        var control = $("#TierValue").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            control.select(0);
            control.trigger("change");
        }
    }
    function onPictureValueDataBound() {
        var control = $("#PictureValue").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            control.select(0);
            control.trigger("change");
        }
    }
    function onKOLValueDataBound() {
        var control = $("#KOLValue").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            control.select(0);
            control.trigger("change");
        }
    }
    function onOtherValueDataBound() {
        var control = $("#OtherValue").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            control.select(0);
            control.trigger("change");
        }
    }
    function onTasteValueDataBound() {
        var control = $("#TasteValue").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            control.select(0);
            control.trigger("change");
        }
    }
    function onPriceValueDataBound() {
        var control = $("#PriceValue").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            control.select(0);
            control.trigger("change");
        }
    }
    function onNutritionFactValueDataBound() {
        var control = $("#NutritionFactValue").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            control.select(0);
            control.trigger("change");
        }
    }
    function onVitaminValueDataBound() {
        var control = $("#VitaminValue").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            control.select(0);
            control.trigger("change");
        }
    }
    function onGoodForHealthValueDataBound() {
        var control = $("#GoodForHealthValue").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            control.select(0);
            control.trigger("change");
        }
    }
    function onBottle_CanDesignValueDataBound() {
        var control = $("#Bottle_CanDesignValue").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            control.select(0);
            control.trigger("change");
        }
    }
    function onHeadlineValueChange() {
        onLoadData();
    }
    function onCompanyNameDataBound() {
        var companyName = $("#CompanyName").data("kendoDropDownList");
        var companyNameLength = companyName.dataSource.data().length;
        if (companyNameLength > 0) {
            companyName.select(0);
            companyName.trigger("change");
        }
    }
    function onCompanyNameChange() {
        $("#ProductName_ProjectName").data("kendoDropDownList").dataSource.read();
    }
    function onSOECompanyDataBound() {
        var sOECompany = $("#SOECompany").data("kendoDropDownList");
        var sOECompanyLength = sOECompany.dataSource.data().length;
        if (sOECompanyLength > 0) {
            sOECompany.select(0);
            sOECompany.trigger("change");
        }
    }
    function onSOECompanyChange() {
        var featureCorp = "";
        var featureValue = 0;
        var sOECompany = $("#SOECompany").data("kendoDropDownList").value();
        if (sOECompany >= 60) {
            featureCorp = "Feature";
            featureValue = 1;
        }
        else {
            featureCorp = "Mention";
            featureValue = 0;
        }
        $("#FeatureCorp").val(featureCorp);
        $("#FeatureValue").val(featureValue);
        onLoadData();
    }
    function onSOEProductDataBound() {
        var sOEProduct = $("#SOEProduct").data("kendoDropDownList");
        var sOEProductLength = sOEProduct.dataSource.data().length;
        if (sOEProductLength > 0) {
            sOEProduct.select(0);
            sOEProduct.trigger("change");
        }
    }
    function onSOEProductChange() {
        var featureProduct = "";
        var sOEProduct = $("#SOEProduct").data("kendoDropDownList").value();
        if (sOEProduct >= 60) {
            featureProduct = "Feature";
        }
        else {
            featureProduct = "Mention";
        }
        $("#FeatureProduct").val(featureProduct);
        onLoadData();
    }
    function onSentimentCorpDataBound() {
        var sentimentCorp = $("#SentimentCorp").data("kendoDropDownList");
        var sentimentCorpLength = sentimentCorp.dataSource.data().length;
        if (sentimentCorpLength > 0) {
            sentimentCorp.select(0);
            sentimentCorp.trigger("change");
        }
    }
    function onSentimentCorpChange() {
        var sentimentValue = 0;
        var sentimentCorp = $("#SentimentCorp").data("kendoDropDownList").value();
        if (sentimentCorp == "Positive") {
            sentimentValue = 1;
        }
        if (sentimentCorp == "Neutral") {
            sentimentValue = 0.5;
        }
        if (sentimentCorp == "Negative") {
            sentimentValue = -1;
        }
        $("#ToneValue").val(sentimentValue);
        onLoadData();
    }
    $("#SpokePersonName").change(function () {
        onCheckSpokePersonName();
    });
    jQuery(function ($) {
        onCheckSpokePersonName();
    });
    function onCheckSpokePersonName() {
        var spokePersonName = $("#SpokePersonName").val();
        $("#SpokePersonValue").val(0);
        if (spokePersonName.length > 0) {
            $("#SpokePersonValue").val(1);
        }
        onLoadData();
    }
    function onLoadData() {
        var spokePersonValueString = $("#SpokePersonValue").val();
        var headlineValueString = $("#HeadlineValue").val();
        var featureValueString = $("#FeatureValue").val();
        var tierValueString = $("#TierValue").val();
        var pictureValueString = $("#PictureValue").val();
        var kOLValueString = $("#KOLValue").val();
        var otherValueString = $("#OtherValue").val();
        var tasteValueString = $("#TasteValue").val();
        var priceValueString = $("#PriceValue").val();
        var nutritionFactValueString = $("#NutritionFactValue").val();
        var vitaminValueString = $("#VitaminValue").val();
        var goodForHealthValueString = $("#GoodForHealthValue").val();
        var bottle_CanDesignValueString = $("#Bottle_CanDesignValue").val();
        var sentimentValueString = $("#ToneValue").val();

        var spokePersonValue = 0;
        var headlineValue = 0;
        var featureValue = 0;
        var tierValue = 0;
        var pictureValue = 0;
        var kOLValue = 0;
        var otherValue = 0;
        var tasteValue = 0;
        var priceValue = 0;
        var nutritionFactValue = 0;
        var vitaminValue = 0;
        var goodForHealthValue = 0;
        var bottle_CanDesignValue = 0;
        var sentimentValue = 0;

        if (spokePersonValueString == "1") {
            spokePersonValue = 1;
        }
        if (headlineValueString == "1") {
            headlineValue = 1;
        }
        if (featureValueString == "1") {
            featureValue = 1;
        }
        if (tierValueString == "1") {
            tierValue = 1;
        }
        if (pictureValueString == "1") {
            pictureValue = 1;
        }
        if (kOLValueString == "1") {
            kOLValue = 1;
        }
        if (otherValueString == "1") {
            otherValue = 1;
        }
        if (tasteValueString == "1") {
            tasteValue = 1;
        }
        if (priceValueString == "1") {
            priceValue = 1;
        }
        if (nutritionFactValueString == "1") {
            nutritionFactValue = 1;
        }
        if (vitaminValueString == "1") {
            vitaminValue = 1;
        }
        if (goodForHealthValueString == "1") {
            goodForHealthValue = 1;
        }
        if (bottle_CanDesignValueString == "1") {
            bottle_CanDesignValue = 1;
        }
        if (sentimentValueString == "1") {
            sentimentValue = 1;
        }
        if (sentimentValueString == "-1") {
            sentimentValue = -1;
        }
        if (sentimentValueString == "0.5") {
            sentimentValue = 0.5;
        }
        var mPS = spokePersonValue + headlineValue + featureValue + tierValue + pictureValue + sentimentValue + kOLValue + otherValue + tasteValue + priceValue + nutritionFactValue + vitaminValue + goodForHealthValue + bottle_CanDesignValue;

        var advalue = $("#Advalue").val();
        var sOECompany = $("#SOECompany").data("kendoDropDownList").value();
        var sOEProduct = $("#SOEProduct").data("kendoDropDownList").value();
        var rOME_Corp_VND = advalue * sOECompany * sentimentValue;
        var rOME_Product_VND = advalue * sOEProduct * sentimentValue;

        let rOME_Corp_VND001 = Math.round(rOME_Corp_VND);
        var rOME_Corp_VNDString = rOME_Corp_VND001.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
        let rOME_Product_VND001 = Math.round(rOME_Product_VND);
        var rOME_Product_VNDString = rOME_Product_VND001.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");

        $("#ROME_Corp_VND").val(rOME_Corp_VNDString);
        $("#ROME_Product_VND").val(rOME_Product_VNDString);
        $("#MPS").val(mPS);
    }
    function onRowMove(url) {
        location.replace(url);
    }
    function onOpenBlank(url) {
        window.open(url, '_blank');
    }
    $(document).keyup(function (e) {
        var e = e || window.event;
        if (e.altKey == true) {
            switch (e.keyCode) {
                case 49:
                    document.getElementById('RowFirst').click();
                    break;
                case 50:
                    document.getElementById('RowBack').click();
                    break;
                case 51:
                    document.getElementById('RowNext').click();
                    break;
                case 52:
                    document.getElementById('RowLast').click();
                    break;
                case 53:
                    document.getElementById('URLCode').click();
                    break;
                case 54:
                    var isSummary_ValueChecked = document.getElementById("IsSummary_Value").checked;
                    if (isSummary_ValueChecked == true) {
                        document.getElementById("IsSummary_Value").checked = false;
                    }
                    else {
                        document.getElementById("IsSummary_Value").checked = true;
                    }
                    break;
                case 55:
                    document.getElementById('Copy').click();
                    break;
            }
        }
    });
</script>