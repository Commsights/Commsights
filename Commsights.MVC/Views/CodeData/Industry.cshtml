@{ ViewData["Title"] = "Industry count"; }

@model Commsights.MVC.Models.CodeDataViewModel

<div class="row">
    <div class="col-md-12">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Code - Industry count</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class='col-sm-2'>
                        @(Html.Kendo().DatePickerFor(Model => Model.DatePublishBegin)
                                     .Format("dd/MM/yyyy")
                                     .HtmlAttributes(new { @class = "form-control text-right", title = "Date begin" })
                                     .DateInput()
                                )
                    </div>
                    <div class='col-sm-2'>
                        @(Html.Kendo().DatePickerFor(Model => Model.DatePublishEnd)
                                     .Format("dd/MM/yyyy")
                                     .HtmlAttributes(new { @class = "form-control text-right", title = "Date end" })
                                     .DateInput()
                                )
                    </div>
                    <div class='col-sm-2' style="display:flex; justify-content:start; align-items:center;">
                        <input id="IsUpload" type="checkbox">
                        <p style="display:inline-block; font-size:14px; font-weight:bold; margin:0; padding-left:10px; margin-right:10px;">Up/Pub</p>
                    </div>
                    <div class='col-sm-1'>
                        <button type="button" class="btn btn-success" title="Search" onclick="onSearch()">
                            <span class="fas fa-search"></span>
                        </button>
                    </div>
                </div>
                <br />
                @(Html.Kendo().Grid<Commsights.Data.DataTransferObject.CodeDataReport>()
.Name("CodeDataReport")
.Columns(columns =>
{
    columns.Bound(t => t.IndustryID).Title("ID").Width(100);
    columns.Bound(t => t.Industry).Title("Industry").Width(300);
    columns.Bound(t => t.ProductPropertyCount).Title("Count").Width(100).HtmlAttributes(new { @class = "text-right text-danger", @style= "font-weight: bold;" });
    columns.Bound(t => t.CodingCount).Title("Coding").Width(100).HtmlAttributes(new { @class = "text-right text-success" });
    columns.Bound(t => t.AnalysisCount).Title("Analysis").Width(100).HtmlAttributes(new { @class = "text-right text-success" });
    columns.Bound(t => t.ProductCount).Title("Source").Width(100).HtmlAttributes(new { @class = "text-right", @style = "font-weight: bold;" });
    columns.Bound(t => t.ProductGoogleCount).Title("Google").Width(100).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.ProductNewspageCount).Title("Newspage").Width(100).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.ProductTVCount).Title("TV").Width(100).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.ProductAndiCount).Title("Andi").Width(100).HtmlAttributes(new { @class = "text-right" });
})
.ToolBar(toolBar => toolBar.Search())
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { @class = "KendoGrid" })
.Search(search => { search.Field(f => f.Industry);})
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(1000)
.Model(model =>
{
})

.Read(t => t.Action("GetReportByDatePublishBeginAndDatePublishEndAndIsUploadToList", "CodeData").Data("filterCodeData"))
)
)
            </div>
        </div>
    </div>
</div>

@(Html.Kendo().Notification()
    .Name("Notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Width(400)
)

<script>
    function onSearch() {        
        $("#CodeDataReport").data("kendoGrid").dataSource.read();
    }
    function filterCodeData(e) {        
        var datePublishBeginValue = toDate02($("#DatePublishBegin").val());
        var datePublishEndValue = toDate02($("#DatePublishEnd").val());
        var isUploadValue = document.getElementById("IsUpload").checked;
        return { datePublishBegin: datePublishBeginValue, datePublishEnd: datePublishEndValue, isUpload: isUploadValue };
    }
</script>
