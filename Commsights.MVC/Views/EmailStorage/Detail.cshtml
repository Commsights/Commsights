@{ ViewData["Title"] = "Email detail"; }

@model Commsights.Data.Models.EmailStorage

<div class="row">
    <div class="col-md-12">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Email detail</h3>
            </div>
            <div class="card-body">
                <form asp-action="Save" asp-controller="EmailStorage">
                    @Html.HiddenFor(Model => Model.ID)
                    <div class="row">
                        <div class='col-md-9'>
                        </div>
                        <div class='col-md-1'>
                            <button style="width:100%;" type="submit" title="Save" class="btn btn-primary">
                                <span class="fas fa-save"></span>
                            </button>
                        </div>                        
                        <div class='col-md-1'>
                            <a asp-route-ID="0" asp-action="Detail" asp-controller="EmailStorage" title="New page" style="width:100%;" class="btn btn-success">
                                <span class="fas fa-plus"></span>
                            </a>
                        </div>
                        <div class='col-md-1'>
                            <a asp-action="Index" asp-controller="EmailStorage" title="Email" style="width:100%;" class="btn btn-info">
                                <span class="fas fa-arrow-left"></span>
                            </a>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class='form-group'>
                                <label for='Display'>Display</label>
                                @(Html.TextBoxFor(Model => Model.Display, new { placeholder = "Display", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='Subject'>Subject</label>
                                @(Html.TextBoxFor(Model => Model.Subject, new { placeholder = "Subject", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='EmailFrom'>Email from</label>
                                @(Html.TextBoxFor(Model => Model.EmailFrom, new { placeholder = "Email from", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='Password'>Password</label>
                                @(Html.TextBoxFor(Model => Model.Password, new { placeholder = "Password", @class = "form-control", @type = "password" }))
                            </div>
                            <div class='form-group'>
                                <label for='EmailTo'>Email To</label>
                                @(Html.TextBoxFor(Model => Model.EmailTo, new { placeholder = "Email To", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='EmailCC'>Email CC</label>
                                @(Html.TextBoxFor(Model => Model.EmailCC, new { placeholder = "Email CC", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='EmailBCC'>Email BCC</label>
                                @(Html.TextBoxFor(Model => Model.EmailBCC, new { placeholder = "Email BCC", @class = "form-control" }))
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class='form-group'>
                                <label for='IndustryID'>Industry</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.IndustryID)
                                   .DataValueField("ID")
                                   .DataTextField("CodeName")
                                   .HtmlAttributes(new {@class = "form-control" })
                                    .Events(e => e.DataBound("onIndustryDataBound").Change("onIndustryChange"))
                                    .Filter(FilterType.StartsWith)
                                   .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetIndustryToList", "Config")))
                                    )
                            </div>
                            <div class='form-group'>
                                <label for='CompanyID'>Company</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.CompanyID)
                                   .DataValueField("ID")
                                   .DataTextField("Account")
                                   .HtmlAttributes(new {@class = "form-control" })
                                   .Events(e => e.DataBound("onCompanyDataBound").Change("onCompanyChange"))
                                    .Filter(FilterType.StartsWith)
                                   .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetByIndustryIDAndParrentIDCustomerToList", "Membership").Data("filterMembership")))
                                    )
                            </div>
                            <div class='form-group'>
                                <label for='CategoryID'>Category</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.CategoryID.Value)
                                   .DataValueField("ID")
                                   .DataTextField("CodeName")
                                   .HtmlAttributes(new {@class = "form-control" })
                                    .Filter(FilterType.StartsWith)
                                   .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetEmailStorageCategoryToList", "Config")))
                                    )
                            </div>
                            <div class='form-group'>
                                <label for='DateSend'>Date send</label>
                                @(Html.TextBoxFor(Model => Model.DateSend, new { placeholder = "Date send", @class = "form-control", @disabled= "disabled" }))
                            </div>
                            <div class='form-group'>
                                <label for='DateRead'>Date read</label>
                                @(Html.TextBoxFor(Model => Model.DateRead, new { placeholder = "Date read", @class = "form-control", @disabled = "disabled" }))
                            </div>
                            <div class='form-group'>
                                <label for='FileAttached'>File attached</label>
                                <table>
                                    <tr>
                                        <td style="width:100%;" valign="top">
                                            @(Html.Kendo().Upload()
                              .Name("Upload")
                              .HtmlAttributes(new { @class = "form-control" })
                                )
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-1">
                        <div class="col-md-12" style="width:100%;">
                            @Html.TextAreaFor(Model => Model.EmailBody)

                            <script src="/ckeditor/ckeditor.js"></script>
                            <script src="/ckeditor/adapters/jquery.js"></script>
                            <script>
                                CKEDITOR.replace("EmailBody", {
                                    on: {
                                        'instanceReady': function (evt) {
                                            evt.editor.resize("100%", "600");
                                        }
                                    }
                                });
                            </script>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@(Html.Kendo().Notification()
    .Name("Notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Width(400)
)

<script>
    function filterMembership(e) {
        var industryIDValue = $("#IndustryID").data("kendoDropDownList").value();
        return { industryID: industryIDValue };
    }
    function onIndustryDataBound() {
        var control = $("#IndustryID").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            control.select(0);
            control.trigger("change");
        }
    }
    function onIndustryChange() {
        $("#CompanyID").data("kendoDropDownList").dataSource.read();
    }
    function onCompanyDataBound() {
        var control = $("#CompanyID").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            control.select(0);
            control.trigger("change");
        }
    }
    function onCompanyChange() {        
    }
</script>
